<?xml version="1.0" encoding="UTF-8" ?> 
<!DOCTYPE mapper PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN" "http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">
<!--//네임스페이스에는 mapper 가 있는 풀 패키지명과 매퍼명을 등록 한다. -->
<mapper namespace="com.utime.household.environment.mapper.BankCardMapper">

	<resultMap id="BasicItemVOMap" type="com.utime.household.environment.vo.BasicItemVO">
		<id column="NO" property="no" />
		<result column="NAME" property="name" />
		<result column="ENABLED" property="enabled" typeHandler="com.utime.household.common.handler.BooleanTypeHandler" />
	</resultMap>

	<!--
		resultMap에서 이렇게도 사용 할 수 있다. 
		
		<association property="address" javaType="com.example.Address" column="{address_id=address_id,city_id=city_id}" select="selectAddressByIdAndCityId" />
   
		<association property="address" column="address_id" javaType="com.example.Address" select="selectAddressById" /> 
	-->
	
	<resultMap id="BankCardVoMap" extends="BasicItemVOMap" type="com.utime.household.environment.vo.BankCardVO">
		<result column="BC" property="bc" typeHandler="com.utime.household.environment.handler.BankCardTypeHandler" />
		<result column="DSCR" property="dscr"/>
		
		<association 
			column="CARD_NO" 
			property="card" 
			javaType="com.utime.household.environment.vo.CardVO"
			select="selectCard" />

		<association 
			column="BANK_NO"
			property="bank" 
			javaType="com.utime.household.environment.vo.BankVO"
			select="selectBank"
			/>
	</resultMap>
	
	<resultMap id="CardVoMap" type="com.utime.household.environment.vo.CardVO">
		<id column="NO" property="no"/>
		<result column="CARD_WITHDRAWAL_DATE"  property="withdrawalDate"/>

		<association 
			column="CARD_COMPANY" 
			property="cardCompany" 
			javaType="com.utime.household.environment.vo.CompanyVO"
			select="selectCardCompany"
			/>
	
		<association 
			column="CARD_WITHDRAWAL_BANK_CARD_NO" 
			property="bank" 
			javaType="com.utime.household.environment.vo.BankCardVO"
			select="selectBankCard"
			/>
			
		<collection
			column="NO" 
			property="cards" 
			javaType="java.util.ArrayList"
			ofType="com.utime.household.environment.vo.CardItemVO" 
			select="selectCardItemList"
			/>
	</resultMap>
	
	<resultMap id="CardItemVoMap" extends="BasicItemVOMap" type="com.utime.household.environment.vo.CardItemVO">
		<result column="CARD_NO" property="cardNo" />
		<result column="CARD_NUMBER" property="cardNumber" />
		<result column="CARD_TYPE" property="cardType" typeHandler="com.utime.household.environment.handler.CardTypeTypeHandler" />
		<result column="DSCR" property="dscr" />
		<result column="FILE_CARD_NAME" property="innerFileCardName" />
		<result column="FILE_CARD_NUMBER" property="innerFileCardNumber" />
	</resultMap>
	
	<resultMap id="BankVoMap" type="com.utime.household.environment.vo.BankVO">
		<result column="NO" property="no" />
		<result column="BANK_ACCOUNT_TYPE" property="accountType" typeHandler="com.utime.household.environment.handler.AccountTypeTypeHandler" />
		<result column="BANK_ACCOUNT_NUMBER" property="accountNumber" />
		<result column="BANK_ACCOUNT_HOLDER" property="accountHolder" />
		<result column="MATURITY" property="maturity" />
		<result column="RATE" property="rate" />
		<result column="TAXABLE" property="taxable" typeHandler="com.utime.household.common.handler.BooleanTypeHandler"/>
 		
		<association 
			column="BANK_COMPANY" 
			property="bankCompay" 
			javaType="com.utime.household.environment.vo.CompanyVO"
			select="selectBankCompany"
			/>
		
	</resultMap>
	
	<resultMap id="CompanyVoMap" extends="BasicItemVOMap" type="com.utime.household.environment.vo.CompanyVO">
		<result column="BEAN_NAME" property="beanName" />
	</resultMap>
	

	<!--은행 사 추가-->
	<insert id="insertBankCompany" parameterType="map">
		INSERT INTO HH_BANK_COMPANY (
				NAME
				<if test="bean != null and bean != '' ">
					, BEAN_NAME
				</if>
			) VALUES (
				#{name} 
				<if test="bean != null and bean != '' ">
					, #{bean}
				</if>
			) 
	</insert>
	
	<!--카드 사 추가-->
	<insert id="insertCardCompany" parameterType="map">
		INSERT INTO HH_CARD_COMPANY (
				NAME
				<if test="bean != null and bean != '' ">
					, BEAN_NAME
				</if>
			) VALUES (
				#{name} 
				<if test="bean != null and bean != '' ">
					, #{bean}
				</if>
			)
	</insert>
	
	<sql id="CompanyColumnSql">
		NO
		, NAME 
		, BEAN_NAME
	</sql>
	
	<!--은행 사 조회-->
	<select id="selectBankCompanyList" parameterType="map" resultMap="CompanyVoMap">
		SELECT
			<include refid="CompanyColumnSql"/> 
		FROM HH_BANK_COMPANY 
		WHERE 1=1
			<if test="no != null">
				AND NO = #{no}
			</if>
			AND ENABLED = 'Y'
		ORDER BY NAME
	</select>
	
	<select id="selectBankCompany" parameterType="map" resultMap="CompanyVoMap">
		SELECT
			<include refid="CompanyColumnSql"/> 
		FROM HH_BANK_COMPANY
		WHERE 1=1
			AND NO = #{bankNo}
			AND ENABLED = 'Y'
	</select>

	<!--카드 사 조회-->
	<select id="selectCardCompanyList" parameterType="map" resultMap="CompanyVoMap">
		SELECT 
			<include refid="CompanyColumnSql"/> 
		FROM HH_CARD_COMPANY 
		WHERE 1=1
			<if test="no != null">
				AND NO = #{no}
			</if>
			AND ENABLED = 'Y'
		ORDER BY NAME
	</select>
	
	<select id="selectCardCompany" parameterType="map" resultMap="CompanyVoMap">
		SELECT
			<include refid="CompanyColumnSql"/> 
		FROM HH_CARD_COMPANY
		WHERE 1=1
			AND NO = #{cardNo}
			AND ENABLED = 'Y'
	</select>
	




	<sql id="selectBankCardSql">
		SELECT
			NO
			, BC
			, NAME
			, BANK_NO 
			, CARD_NO
			, DSCR
		FROM HH_BANK_CARD
		WHERE 1=1
			AND ENABLED = 'Y'
	</sql>

	<select id="selectBankCardList" parameterType="map" resultMap="BankCardVoMap">
		<include refid="selectBankCardSql"/>
			<if test="bc != null ">
				AND BC = #{bc, typeHandler=com.utime.household.environment.handler.BankCardTypeHandler}
			</if>
		ORDER BY NAME
	</select>
	
	<select id="selectBankCard" parameterType="map" resultMap="BankCardVoMap">
		<include refid="selectBankCardSql"/>
			AND NO = #{no}
	</select>

	<!-- 간단 정보 조회 -->
	<select id="getSimpleBankCard" parameterType="map" resultMap="BankCardVoMap">
		SELECT
			NO
			, BC
			, NAME
			, DSCR
		FROM HH_BANK_CARD
		WHERE 1=1
			AND NO = #{no}
			AND ENABLED = 'Y'
	</select>

	<!-- 추가하기 전 동일 정보 체크 -->
	<select id="sameCheckBankCard" resultType="boolean" parameterType="com.utime.household.environment.vo.BankCardVO">
		SELECT 
			CASE COUNT(1) 
	   			WHEN 1 THEN 1
				ELSE 0
	   		END AS RES 
	   	FROM HH_BANK_CARD
	   	WHERE 1=1
	   		<if test="no > -1 ">
	   			AND NO != #{no}
	   		</if>
	   		AND ENABLED = 'Y'
	   		AND BC = #{bc, typeHandler=com.utime.household.environment.handler.BankCardTypeHandler}
	   		AND UPPER(NAME) = UPPER(#{name})
	</select>

	<!-- 추가 -->
	<insert id="insertBankCard" parameterType="com.utime.household.environment.vo.BankCardVO" useGeneratedKeys="true" keyProperty="no">
		INSERT INTO HH_BANK_CARD (
			UPDATE_DATE
			, BC
			, NAME
			<if test=" null != dscr and '' != dscr ">
			, DSCR
			</if>
			<choose>
				<when test='bc.code == "B" '>
					, BANK_NO
				</when>
				<when test='bc.code == "C" '>
					, CARD_NO
				</when>
				<otherwise></otherwise>
			</choose>
		) VALUES (
			DATETIME('NOW','LOCALTIME')
			, #{bc, typeHandler=com.utime.household.environment.handler.BankCardTypeHandler}
			, #{name}
			<if test=" null != dscr and '' != dscr ">
			, #{dscr}
			</if>
			<choose>
				<when test='bc.code == "B" '>
					, #{bank.no}
				</when>
				<when test='bc.code == "C" '>
					, #{card.no}
				</when>
				<otherwise></otherwise>
			</choose>
		)
	</insert>
	
	<!-- 수정 -->
	<update id="updateBankCard" parameterType="com.utime.household.environment.vo.BankCardVO">
		UPDATE HH_BANK_CARD SET
			UPDATE_DATE = DATETIME('NOW','LOCALTIME')
			, BC = #{bc, typeHandler=com.utime.household.environment.handler.BankCardTypeHandler}
			, NAME = #{name}
			, DSCR = <choose>
				<when test="null != dscr and '' != dscr ">#{dscr}</when>
				<otherwise>NULL</otherwise>
			</choose>
			<choose>
				<when test='bc.code == "B" '>
					, BANK_NO = #{bank.no}
				</when>
				<when test='bc.code == "C" '>
					, CARD_NO = #{card.no}
				</when>
				<otherwise></otherwise>
			</choose>
		WHERE 1=1
			AND NO = #{no}
			AND ENABLED = 'Y'
	</update>
	
	<!-- 삭제 -->
	<update id="deleteBankCard" parameterType="map">
		UPDATE HH_BANK_CARD SET
			UPDATE_DATE = DATETIME('NOW','LOCALTIME')
			, ENABLED = 'N'
		WHERE 1=1
			AND NO = #{no}
			AND ENABLED = 'Y'
	</update>	
	
	<!-- 은행 조회 -->
	<select id="selectBank" parameterType="map" resultMap="BankVoMap">
		SELECT 
			NO
			, BANK_COMPANY 
			, BANK_ACCOUNT_TYPE  
			, BANK_ACCOUNT_NUMBER
			, BANK_ACCOUNT_HOLDER
			, MATURITY 
			, RATE 
			, TAXABLE
		FROM HH_BANK
		WHERE 1=1
			AND NO = #{bankNo}
			AND ENABLED = 'Y'
	</select>
	
	<!--은행 추가-->
	<insert id="insertBank" parameterType="com.utime.household.environment.vo.BankVO">
		INSERT INTO HH_BANK (
			NO
			, UPDATE_DATE
			, BANK_COMPANY 
			, BANK_ACCOUNT_TYPE  
			<if test=" null != accountNumber and '' != accountNumber ">
			, BANK_ACCOUNT_NUMBER 
			</if>
			<if test=" null != accountHolder and '' != accountHolder ">
			, BANK_ACCOUNT_HOLDER
			</if>
			<if test=" null != maturity ">
			, MATURITY 
			</if>
			, RATE 
			, TAXABLE
		) VALUES (
			#{no}
			, DATETIME('NOW','LOCALTIME')
			, #{bankCompay.no} 
			, #{accountType, typeHandler=com.utime.household.environment.handler.AccountTypeTypeHandler}
			<if test=" null != accountNumber and '' != accountNumber ">  
			, #{accountNumber} 
			</if>
			<if test=" null != accountHolder and '' != accountHolder ">
			, #{accountHolder}
			</if>
			<if test=" null != maturity ">
			, #{maturity} 
			</if>
			, #{rate} 
			, #{taxable, typeHandler=com.utime.household.common.handler.BooleanTypeHandler}
		)
	</insert>
	
	<!-- 은행 수정 -->
	<update id="updateBank" parameterType="com.utime.household.environment.vo.BankVO">
		UPDATE HH_BANK SET 
			UPDATE_DATE = DATETIME('NOW','LOCALTIME')
			, BANK_COMPANY = #{bankCompay.no} 
			, BANK_ACCOUNT_TYPE = #{accountType, typeHandler=com.utime.household.environment.handler.AccountTypeTypeHandler}
			, BANK_ACCOUNT_NUMBER = <choose>
				<when test="null != accountNumber and '' != accountNumber ">#{accountNumber}</when>
				<otherwise>NULL</otherwise>
			</choose>
			, BANK_ACCOUNT_HOLDER = <choose>
				<when test="null != accountHolder and '' != accountHolder ">#{accountHolder}</when>
				<otherwise>NULL</otherwise>
			</choose>
			, MATURITY = <choose>
				<when test="null != maturity and '' != maturity ">#{maturity}</when>
				<otherwise>NULL</otherwise>
			</choose> 
			, RATE = #{rate} 
			, TAXABLE = #{taxable, typeHandler=com.utime.household.common.handler.BooleanTypeHandler}
		WHERE 1=1
			AND NO = #{no}
			AND ENABLED = 'Y'
	</update>
	
	<!-- 은행 삭제 -->
	<update id="deleteBank" parameterType="map">
		UPDATE HH_BANK SET 
			UPDATE_DATE = DATETIME('NOW','LOCALTIME')
			, ENABLED = 'N' 
		WHERE 1=1
			AND NO = #{no}
			AND ENABLED = 'Y'
	</update>
	
	<!-- 카드 조회 -->
	<select id="selectCard" parameterType="map" resultMap="CardVoMap">
		SELECT
			NO
			, CARD_COMPANY 
			, CARD_WITHDRAWAL_DATE 
			, CARD_WITHDRAWAL_BANK_CARD_NO
		FROM HH_CARD
		WHERE 1=1
			AND NO = #{cardNo}
			AND ENABLED = 'Y'
	</select>
	
	<!--카드 추가-->
	<insert id="insertCard" parameterType="com.utime.household.environment.vo.CardVO">
		INSERT INTO HH_CARD (
			NO
			, UPDATE_DATE
			, CARD_COMPANY
			, CARD_WITHDRAWAL_DATE  
			<if test=" null != bank ">
			, CARD_WITHDRAWAL_BANK_CARD_NO
			</if>
		) VALUES (
			#{no}
			, DATETIME('NOW','LOCALTIME')
			, #{cardCompany.no}
			, #{withdrawalDate}
			<if test=" null != bank ">
			, #{bank.no}
			</if>
		)
	</insert> 
	
	<!-- 카드 수정 -->
	<update id="updateCard" parameterType="com.utime.household.environment.vo.CardVO">
		UPDATE HH_CARD SET 
			UPDATE_DATE = DATETIME('NOW','LOCALTIME')
			, CARD_COMPANY = #{cardCompany.no}
			, CARD_WITHDRAWAL_DATE = #{withdrawalDate}
			, CARD_WITHDRAWAL_BANK_CARD_NO = <choose>
				<when test="null != bank ">#{bank.no}</when>
				<otherwise>0</otherwise>
			</choose>
		WHERE 1=1
			AND NO = #{no}
			AND ENABLED = 'Y'
	</update>
	
	<!-- 카드 삭제 -->
	<update id="deleteCard" parameterType="map">
		UPDATE HH_CARD SET 
			UPDATE_DATE = DATETIME('NOW','LOCALTIME')
			, ENABLED = 'N'
		WHERE 1=1
			AND NO = #{no}
			AND ENABLED = 'Y'
	</update>	
	
	<select id="selectCardItemList" parameterType="map" resultMap="CardItemVoMap">
		SELECT 
			NO
			, CARD_NO
			, NAME
			, CARD_NUMBER 
			, CARD_TYPE
			, DSCR 
			, FILE_CARD_NAME 
			, FILE_CARD_NUMBER 
		FROM HH_CARD_ITEM
		WHERE 1=1
			AND CARD_NO = #{cardNo}
			AND ENABLED = 'Y'
		ORDER BY NAME
	</select>
	
	<select id="selectCardItem" parameterType="map" resultMap="CardItemVoMap">
		SELECT 
			NO
			, CARD_NO
			, NAME
			, CARD_NUMBER 
			, CARD_TYPE
			, DSCR 
			, FILE_CARD_NAME 
			, FILE_CARD_NUMBER 
		FROM HH_CARD_ITEM
		WHERE 1=1
			AND NO = #{no}
			AND ENABLED = 'Y'
		ORDER BY NAME
	</select>
	
	<select id="sameCheckCardItem" resultType="boolean" parameterType="com.utime.household.environment.vo.CardItemVO">
		SELECT 
			CASE COUNT(1) 
	   			WHEN 1 THEN 1
				ELSE 0
	   		END AS RES 
	   	FROM HH_CARD_ITEM
	   	WHERE 1=1
	   		<if test="no > -1 ">
	   			AND NO != #{no}
	   		</if>
	   		AND CARD_NO = #{cardNo}
	   		AND ENABLED = 'Y'
	   		AND UPPER(NAME) = UPPER(#{name})
	</select>

	
	<!--카드 아이템 추가 -->
	<insert id="insertCardItem" parameterType="com.utime.household.environment.vo.CardItemVO"  useGeneratedKeys="true" keyProperty="no">
		INSERT INTO HH_CARD_ITEM (
			UPDATE_DATE
			, CARD_NO
			, NAME  
			<if test=" null != cardNumber and '' != cardNumber "> 
			, CARD_NUMBER
			</if>
			, CARD_TYPE
			<if test=" null != dscr and '' != dscr ">  
			, DSCR
			</if>
			<if test=" null != innerFileCardName and '' != innerFileCardName ">
			, FILE_CARD_NAME
			</if>
			<if test=" null != innerFileCardNumber and '' != innerFileCardNumber ">
			, FILE_CARD_NUMBER
			</if>
		) VALUES (
			DATETIME('NOW','LOCALTIME')
			, #{cardNo}
			, #{name}
			<if test=" null != cardNumber and '' != cardNumber "> 
			, #{cardNumber}
			</if>
			, #{cardType, typeHandler=com.utime.household.environment.handler.CardTypeTypeHandler}
			<if test=" null != dscr and '' != dscr ">  
			, #{dscr}
			</if>
			<if test=" null != innerFileCardName and '' != innerFileCardName ">
			, #{innerFileCardName}
			</if>
			<if test=" null != innerFileCardNumber and '' != innerFileCardNumber ">
			, #{innerFileCardNumber}
			</if>
		)
	</insert>
	
	<!--카드 아이템 수정-->
	<update id="updateCardItem"  parameterType="com.utime.household.environment.vo.CardItemVO">
		UPDATE HH_CARD_ITEM SET 
			UPDATE_DATE = DATETIME('NOW','LOCALTIME')
			, CARD_NO = #{cardNo}
			, NAME = #{name}
			, CARD_NUMBER = <choose>
				<when test="null != cardNumber and '' != cardNumber ">#{cardNumber}</when>
				<otherwise>NULL</otherwise>
			</choose>
			, CARD_TYPE = #{cardType, typeHandler=com.utime.household.environment.handler.CardTypeTypeHandler}
			, DSCR = <choose>
				<when test="null != dscr and '' != dscr ">#{dscr}</when>
				<otherwise>NULL</otherwise>
			</choose>
		WHERE 1=1
			AND NO = #{no}
			AND ENABLED = 'Y'
	</update>
	
	<!--카드 아이템 삭제--> 
	<update id="deleteCardItem"  parameterType="map">
		UPDATE HH_CARD_ITEM SET 
			UPDATE_DATE = DATETIME('NOW','LOCALTIME')
			, ENABLED = 'N'
		WHERE 1=1
			AND NO = #{no}
			AND ENABLED = 'Y'
	</update>
	
	<!--카드 아이템 삭제--> 
	<update id="deleteAllCardItem"  parameterType="map">
		UPDATE HH_CARD_ITEM SET 
			UPDATE_DATE = DATETIME('NOW','LOCALTIME')
			, ENABLED = 'N'
		WHERE 1=1
			AND CARD_NO = #{cardNo}
			AND ENABLED = 'Y'
	</update>
	
	<!--은행을 쓰고 있는 카드사 조회-->
	<select id="selectCardFromBankNo" resultMap="BankCardVoMap">
		<include refid="selectBankCardSql"/>
		AND NO IN (
			SELECT 
				NO
			FROM HH_CARD 
			WHERE CARD_WITHDRAWAL_BANK_CARD_NO = #{no}
		)
	</select>
	
</mapper>